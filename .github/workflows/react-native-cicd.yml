name: React Native CI/CD

on:
  push:
    branches: [main, master]
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - "docs/**"
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      buildType:
        type: choice
        description: "Build type to run"
        options:
          - prod-apk
          - all

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  NODE_OPTIONS: --openssl-legacy-provider

jobs:
  check-skip:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Skip CI check
        run: echo "Proceeding with workflow"

  test:
    needs: check-skip
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "yarn"

      - name: 📦 Install dependencies
        run: yarn install

      - name: 🧹 Run ESLint
        run: yarn run eslint

      - name: 🎨 Run Prettier check
        run: yarn run format

      - name: 🧪 Run TypeScript check
        run: yarn run typecheck

  build-and-release:
    needs: test
    if: (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')) || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "yarn"

      - name: 📦 Install dependencies
        run: |
          yarn install

      - name: 🏗 Expo prebuild
        run: |
          yarn expo prebuild

      - name: 🏗 Set architecture and memory limits
        run: |
          cd android
          sed -i -e 's/^org\.gradle\.jvmargs=.*/org.gradle.jvmargs=-Xmx5120m -XX:MaxMetaspaceSize=1024m/' -e 's/^reactNativeArchitectures=.*/reactNativeArchitectures=armeabi-v7a,arm64-v8a/' gradle.properties

      - name: 📱 Build Production APK
        if: github.event.inputs.buildType == 'all' || github.event.inputs.buildType == 'prod-apk' || github.event_name == 'push'
        run: |
          cd android
          ./gradlew assembleRelease

      - name: 🏷️ Generate build information
        id: build-info
        run: |
          VERSION=$(node -p "require('./app.json').expo.version")
          BUILD_NUMBER=$(date +%Y%m%d%H%M)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          # Generate changelog from commit messages since last tag
          if git describe --tags --abbrev=0 > /dev/null 2>&1; then
            LAST_TAG=$(git describe --tags --abbrev=0)
            git log $LAST_TAG..HEAD --pretty=format:"- %s" > changelog.md
          else
            git log --pretty=format:"- %s" -n 10 > changelog.md
          fi

      - name: 📦 Upload build artifacts to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: app-builds
          path: |
            android/app/build/outputs/apk/release/app-release.apk
          retention-days: 7

      - name: 📝 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Release v${{ steps.build-info.outputs.version }}-${{ steps.build-info.outputs.build_number }}"
          tag_name: "v${{ steps.build-info.outputs.version }}-${{ steps.build-info.outputs.build_number }}"
          files: |
            android/app/build/outputs/apk/release/app-release.apk
          body_path: changelog.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
